=== tests/cases/compiler/uncalledFunctionChecksInConditional.ts ===
declare function isFoo(): boolean;
>isFoo : Symbol(isFoo, Decl(uncalledFunctionChecksInConditional.ts, 0, 0))

declare function isBar(): boolean;
>isBar : Symbol(isBar, Decl(uncalledFunctionChecksInConditional.ts, 0, 34))

if (isFoo) {
>isFoo : Symbol(isFoo, Decl(uncalledFunctionChecksInConditional.ts, 0, 0))

    // error
}

if (isFoo || isBar) {
>isFoo : Symbol(isFoo, Decl(uncalledFunctionChecksInConditional.ts, 0, 0))
>isBar : Symbol(isBar, Decl(uncalledFunctionChecksInConditional.ts, 0, 34))

    // error
}

if (isFoo || isFoo()) {
>isFoo : Symbol(isFoo, Decl(uncalledFunctionChecksInConditional.ts, 0, 0))
>isFoo : Symbol(isFoo, Decl(uncalledFunctionChecksInConditional.ts, 0, 0))

    // error
}

if (isFoo && isFoo()) {
>isFoo : Symbol(isFoo, Decl(uncalledFunctionChecksInConditional.ts, 0, 0))
>isFoo : Symbol(isFoo, Decl(uncalledFunctionChecksInConditional.ts, 0, 0))

    // no error
}

